// .text
@0000 7008 // ldi r0, 8
@0001 7101 // ldi r1, 1
@0002 720d // ldi r2, 13
@0003 7300 // ldi r3, 0    target label: UART
@0004 5330 // shl r3, r3, r0
@0005 735d // ldi r3, 93    target label: UART
@0006 3433 // or r4, r3, r3
@0007 8b04 // ld r11, r4, 0
@0008 7300 // ldi r3, 0    target label: LCD
@0009 5330 // shl r3, r3, r0
@000a 735e // ldi r3, 94    target label: LCD
@000b 3433 // or r4, r3, r3
@000c 8c04 // ld r12, r4, 0
@000d 7300 // ldi r3, 0    target label: msg
@000e 5330 // shl r3, r3, r0
@000f 735f // ldi r3, 95    target label: msg
@0010 3433 // or r4, r3, r3
@0011 8d04 // ld r13, r4, 0
@0012 7300 // ldi r3, 0    target label: controls
@0013 5330 // shl r3, r3, r0
@0014 7360 // ldi r3, 96    target label: controls
@0015 3433 // or r4, r3, r3
@0016 8e04 // ld r14, r4, 0
@0017 7a00 // ldi r10, 0    label: start
@0018 866b // ld r6, r11, 6    label: read_loop
@0019 bff6 // bz r6, -1    target label: read_loop
@001a 898b // ld r9, r11, 8
@001b 970b // st r0, r11, 7
@001c 929b // st r9, r11, 2
@001d 1692 // sub r6, r9, r2
@001e b026 // bz r6, 2    target label: newline
@001f a0d0 // br 13    target label: not_newline
@0020 d048 // jal 0x48    label: newline    target label: send_char
@0021 93ab // st r10, r11, 3
@0022 d053 // jal 0x53    target label: clear_LCD
@0023 7500 // ldi r5, 0
@0024 165a // sub r6, r5, r10
@0025 c026 // bn r6, 2    target label: start_HLSM
@0026 af10 // br -15    target label: start
@0027 910e // st r0, r14, 1    label: start_HLSM
@0028 7302 // ldi r3, 2
@0029 08e3 // add r8, r14, r3
@002a d044 // jal 0x44    target label: busy_loop
@002b a0c0 // br 12    target label: data_out
@002c 7520 // ldi r5, 32    label: not_newline
@002d 16a5 // sub r6, r10, r5
@002e c026 // bn r6, 2    target label: store_char
@002f ae90 // br -23    target label: read_loop
@0030 d048 // jal 0x48    label: store_char    target label: send_char
@0031 08da // add r8, r13, r10
@0032 9098 // st r9, r8, 0
@0033 90ae // st r10, r14, 0
@0034 0aa1 // add r10, r10, r1
@0035 93ab // st r10, r11, 3
@0036 ae20 // br -30    target label: read_loop
@0037 7700 // ldi r7, 0    label: data_out
@0038 167a // sub r6, r7, r10    label: data_out_loop
@0039 b086 // bz r6, 8    target label: finished
@003a 08d7 // add r8, r13, r7
@003b 8908 // ld r9, r8, 0
@003c 08c7 // add r8, r12, r7
@003d 9098 // st r9, r8, 0
@003e d048 // jal 0x48    target label: send_char
@003f 0771 // add r7, r7, r1
@0040 af80 // br -8    target label: data_out_loop
@0041 790d // ldi r9, 13    label: finished
@0042 d048 // jal 0x48    target label: send_char
@0043 ad40 // br -44    target label: start
@0044 8608 // ld r6, r8, 0    label: busy_loop
@0045 b026 // bz r6, 2    target label: busy_loop_done
@0046 afe0 // br -2    target label: busy_loop
@0047 e0f0 // jr r15    label: busy_loop_done
@0048 3499 // or r4, r9, r9    label: send_char
@0049 5440 // shl r4, r4, r0
@004a 344a // or r4, r4, r10
@004b 934b // st r4, r11, 3
@004c 999b // st r9, r11, 9
@004d 9a0b // st r0, r11, 10
@004e 740b // ldi r4, 11
@004f 08b4 // add r8, r11, r4
@0050 33ff // or r3, r15, r15
@0051 d044 // jal 0x44    target label: busy_loop
@0052 e030 // jr r3
@0053 7320 // ldi r3, 32    label: clear_LCD
@0054 7400 // ldi r4, 0
@0055 7520 // ldi r5, 32
@0056 1654 // sub r6, r5, r4    label: clear_LCD_loop
@0057 b056 // bz r6, 5    target label: clear_LCD_done
@0058 08c4 // add r8, r12, r4
@0059 9038 // st r3, r8, 0
@005a 0441 // add r4, r4, r1
@005b afb0 // br -5    target label: clear_LCD_loop
@005c e0f0 // jr r15    label: clear_LCD_done

// .data
@005d f000 // 0    label: UART
@005e f020 // 2    label: LCD
@005f f050 // 0    label: msg
@0060 f070 // 2    label: controls
